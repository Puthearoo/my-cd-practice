name: Backend CI/CD

on:
  push:
    branches: [test-workflow]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: |
          cd backend
          npm ci

      - name: Run tests
        run: |
          cd backend
          npm test
        env:
          NODE_ENV: test
          TEST_DB_URL: ${{ secrets.TEST_DATABASE_URL }}

  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/test-workflow'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create deployment package
        run: |
          tar -czf backend.tar.gz backend/
          ls -lh backend.tar.gz

      - name: Upload backend package
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "backend.tar.gz"
          target: "/tmp/"

      - name: Deploy on server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -e
            APP_DIR="/home/roo/my-cd-practice/backend"
            PM2_APP_NAME="backend-app"

            echo "ðŸš€ Deploying backend to $APP_DIR"
            mkdir -p $APP_DIR
            tar -xzf /tmp/backend.tar.gz -C /home/roo/my-cd-practice
            rm -f /tmp/backend.tar.gz

            cd $APP_DIR
            echo "ðŸ“¦ Installing dependencies..."
            npm install --production

            echo "ðŸ”„ Restarting backend with PM2..."
            # Install PM2 if not exists
            if ! command -v pm2 &> /dev/null; then
                npm install -g pm2
            fi

            # Start or restart the application
            pm2 delete $PM2_APP_NAME 2>/dev/null || true
            pm2 start ecosystem.config.js --name $PM2_APP_NAME
            pm2 save
            pm2 startup 2>/dev/null || true

            echo "âœ… Backend deployed successfully!"
