name: CI/CD HTML Deployment

on:
  push:
    branches: [test-workflow]

jobs:
  deploy-html:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Find HTML files
        run: |
          echo "🔍 Searching for HTML files..."
          echo "📁 Current directory structure:"
          ls -la

          # Find all HTML files
          HTML_FILES=$(find . -name "*.html" -type f)
          echo "📄 Found HTML files:"
          echo "$HTML_FILES"

          if [ -z "$HTML_FILES" ]; then
            echo "❌ No HTML files found in the repository!"
            exit 1
          fi

          # Use the first HTML file found
          MAIN_HTML=$(echo "$HTML_FILES" | head -1)
          echo "🎯 Using HTML file: $MAIN_HTML"
          echo "HTML_DIR=$(dirname $MAIN_HTML)" >> $GITHUB_ENV

      - name: Create deployment package
        run: |
          echo "📦 Creating package from: $HTML_DIR"
          tar -czf frontend.tar.gz -C $HTML_DIR .
          echo "✅ Package created:"
          ls -la frontend.tar.gz

      - name: Test SSH connection
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ vars.SSM_NOST }}
          username: ${{ vars.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ vars.SSM_NORT }}
          script: |
            echo "✅ SSH Connection successful to ${{ vars.SSM_NOST }}!"
            echo "📁 Preparing server directory: /var/www/my-app"
            sudo mkdir -p /var/www/my-app
            sudo chown -R $USER:$USER /var/www/my-app
            echo "Server ready for deployment 🚀"

      - name: Transfer files to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ vars.SSM_NOST }}
          username: ${{ vars.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ vars.SSM_NORT }}
          source: "frontend.tar.gz"
          target: "/tmp/"

      - name: Deploy to web server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ vars.SSM_NOST }}
          username: ${{ vars.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ vars.SSM_NORT }}
          script: |
            set -e

            WEB_DIR="/var/www/my-app"
            echo "🚀 Deploying to: $WEB_DIR"

            # Create backup if exists
            if [ -d "$WEB_DIR" ] && [ "$(ls -A $WEB_DIR)" ]; then
              echo "📦 Creating backup..."
              BACKUP_DIR="/var/www/backups/$(date +%Y%m%d_%H%M%S)"
              mkdir -p "$BACKUP_DIR"
              cp -r $WEB_DIR/* "$BACKUP_DIR"/
              echo "✅ Backup created at: $BACKUP_DIR"
            fi

            # Clean deployment directory
            rm -rf $WEB_DIR/*

            # Extract new files
            echo "📤 Extracting new version..."
            tar -xzf /tmp/frontend.tar.gz -C $WEB_DIR/

            # Set proper permissions
            chmod -R 755 $WEB_DIR
            chown -R $USER:$USER $WEB_DIR

            # Cleanup temporary files
            rm -f /tmp/frontend.tar.gz

            echo "✅ Deployment completed successfully!"
            echo "📁 Deployed files:"
            ls -la $WEB_DIR/
            echo "🌐 Your website is now live at: http://${{ vars.SSM_NOST }}"

      - name: Verify deployment
        run: |
          echo "🎊 Deployment workflow completed!"
          echo "-----------------------------------"
          echo "🌐 Website URL: http://${{ vars.SSM_NOST }}"
          echo "🖥️  Server IP: ${{ vars.SSM_NOST }}"
          echo "👤 Username: ${{ vars.USERNAME }}"
          echo "🚀 Your HTML site is now deployed!"
          echo "✅ CI/CD Deployment Successful!"
