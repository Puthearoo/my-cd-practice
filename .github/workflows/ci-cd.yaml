name: CI/CD HTML Deployment

on:
  push:
    branches: [test-workflow]

jobs:
  deploy-html:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify HTML file exists
        run: |
          echo "üìÅ Current directory structure:"
          ls -la
          echo "üìÑ Looking for HTML files..."

          if [ -f "index.html" ]; then
            echo "‚úÖ Found index.html in root directory!"
            echo "HTML_DIR=." >> $GITHUB_ENV
          else
            echo "‚ùå index.html not found in root directory"
            echo "Available files:"
            find . -name "*.html" -type f
            exit 1
          fi

      - name: Create deployment package
        run: |
          echo "üì¶ Packaging files from: $HTML_DIR"
          tar -czf frontend.tar.gz index.html *.css *.js 2>/dev/null || \
          (echo "Packaging only HTML file" && tar -czf frontend.tar.gz index.html)
          echo "‚úÖ Package created:"
          ls -la frontend.tar.gz

      - name: Test SSH connection
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo "‚úÖ SSH Connection successful to ${{ secrets.SSH_HOST }}!"
            echo "üìÅ Preparing server directory: /var/www/my-app"
            mkdir -p /var/www/my-app
            echo "Server ready for deployment üöÄ"

      - name: Transfer files to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "frontend.tar.gz"
          target: "/tmp/"

      - name: Deploy to web server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -e

            WEB_DIR="/var/www/my-app"
            echo "üöÄ Deploying to: $WEB_DIR"

            # Ensure target directory exists
            sudo mkdir -p $WEB_DIR

            # Backup existing files
            if [ -d "$WEB_DIR" ] && [ "$(ls -A $WEB_DIR)" ]; then
              echo "üì¶ Creating backup..."
              BACKUP_DIR="/var/www/backups/$(date +%Y%m%d_%H%M%S)"
              sudo mkdir -p "$BACKUP_DIR"
              sudo cp -r $WEB_DIR/* "$BACKUP_DIR"/
              echo "‚úÖ Backup created at: $BACKUP_DIR"
            fi

            # Clean old files
            sudo rm -rf $WEB_DIR/*

            # Extract new files
            echo "üì§ Extracting new version..."
            sudo tar -xzf /tmp/frontend.tar.gz -C $WEB_DIR/

            # Permissions
            sudo chmod -R 755 $WEB_DIR
            sudo chown -R $USER:$USER $WEB_DIR || true

            # Cleanup
            rm -f /tmp/frontend.tar.gz

            echo "‚úÖ Deployment completed successfully!"
            echo "üåê Website is live at: http://${{ secrets.SSH_HOST }}:${{ secrets.SSH_PORT }}"

      - name: Verify deployment
        run: |
          echo "üéä Deployment workflow completed!"
          echo "-----------------------------------"
          echo "üåê Website URL: http://${{ secrets.SSH_HOST }}:${{ secrets.SSH_PORT }}"
          echo "üë§ Username: ${{ secrets.SSH_USER }}"
          echo "‚úÖ CI/CD Deployment Successful!"
