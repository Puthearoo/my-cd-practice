name: Frontend CI/CD

on:
  push:
    branches: [test-workflow]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify frontend files
        run: |
          echo "üìÑ Checking frontend files..."
          if [ -f "frontend/index.html" ]; then
            echo "‚úÖ Found index.html"
            echo "‚úÖ Found styles.css"
            echo "‚úÖ Found script.js"
          else
            echo "‚ùå Frontend files not found"
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          # REMOVE the cache line since we don't have package-lock.json in root
          # cache: "npm"
          # cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm install

      - name: Run tests (if any)
        run: |
          cd frontend
          # Run tests if they exist, otherwise continue
          if [ -f "test.js" ] || [ -f "__tests__" ]; then
            npm test -- --watchAll=false
          else
            echo "No tests found, skipping test execution"
          fi

  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/test-workflow'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          cd frontend
          npm install

      - name: Create deployment package
        run: |
          echo "üì¶ Packaging frontend files..."
          cd frontend
          # Package all frontend files except node_modules and hidden files
          tar -czf ../frontend.tar.gz . \
            --exclude='node_modules' \
            --exclude='.git*' \
            --exclude='.github' \
            --exclude='.DS_Store'
          cd ..
          ls -lh frontend.tar.gz

      - name: Upload frontend package
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "frontend.tar.gz"
          target: "/tmp/"

      - name: Deploy on server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -e
            FRONT_DIR="/var/www/html"

            echo "üöÄ Deploying frontend to $FRONT_DIR"
            sudo mkdir -p $FRONT_DIR

            # Clean existing files (keep hidden files like .htaccess)
            sudo find $FRONT_DIR -maxdepth 1 -type f ! -name '.*' -delete
            sudo find $FRONT_DIR -maxdepth 1 -type l ! -name '.*' -delete

            # Extract new files
            sudo tar -xzf /tmp/frontend.tar.gz -C $FRONT_DIR
            sudo chown -R www-data:www-data $FRONT_DIR
            sudo chmod -R 755 $FRONT_DIR

            # Restart nginx
            sudo systemctl restart nginx

            # Cleanup
            rm -f /tmp/frontend.tar.gz

            echo "‚úÖ Frontend deployed successfully!"
            echo "üåê Website available at: http://$(hostname -I | awk '{print $1}')"

      - name: Verify deployment
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo "üîç Verifying deployment..."
            ls -la /var/www/html/
            echo "üìÑ Index.html content:"
            head -n 10 /var/www/html/index.html
            echo "‚úÖ Deployment verification complete"
