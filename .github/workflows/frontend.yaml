name: Frontend CI/CD

on:
  push:
    branches: [test-workflow, main, development] # Add your working branches
  pull_request:
    branches: [main]
  workflow_dispatch: # Manual trigger

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify frontend files
        run: |
          echo "📄 Checking frontend files..."
          if [ -f "frontend/index.html" ] && [ -f "frontend/styles.css" ] && [ -f "frontend/script.js" ]; then
            echo "✅ All essential frontend files found"
          else
            echo "❌ Missing essential frontend files"
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: |
          cd frontend
          if [ -f "package.json" ]; then
            npm install
          else
            echo "⚠️ package.json not found, skipping npm install"
          fi

      - name: Run tests (if any)
        run: |
          cd frontend
          if [ -f "package.json" ] && npm run test --dry-run >/dev/null 2>&1; then
            npm test -- --watchAll=false
          else
            echo "No tests found, skipping test execution"
          fi

  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/test-workflow' || github.ref == 'refs/heads/development'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          cd frontend
          if [ -f "package.json" ]; then
            npm install
          else
            echo "No package.json found, skipping npm install"
          fi

      - name: Create deployment package
        run: |
          echo "📦 Packaging frontend files..."
          cd frontend
          tar -czf ../frontend.tar.gz \
            index.html \
            styles.css \
            script.js \
            package.json \
            package-lock.json 2>/dev/null || true
          cd ..
          ls -lh frontend.tar.gz

      - name: Upload frontend package
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "frontend.tar.gz"
          target: "/tmp/"

      - name: Deploy on server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -e
            FRONT_DIR="/var/www/html"

            echo "🚀 Deploying frontend to $FRONT_DIR"
            sudo mkdir -p $FRONT_DIR
            sudo find $FRONT_DIR -maxdepth 1 -type f ! -name '.*' -delete || true
            sudo find $FRONT_DIR -maxdepth 1 -type l ! -name '.*' -delete || true
            sudo tar -xzf /tmp/frontend.tar.gz -C $FRONT_DIR
            sudo chown -R www-data:www-data $FRONT_DIR
            sudo chmod -R 755 $FRONT_DIR
            sudo systemctl restart nginx
            rm -f /tmp/frontend.tar.gz
            echo "✅ Frontend deployed successfully!"
